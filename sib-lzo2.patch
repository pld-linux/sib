--- sib-1.2/src/Makefile~	2006-12-12 01:44:31.103615668 +0200
+++ sib-1.2/src/Makefile	2006-12-12 01:47:41.957892286 +0200
@@ -3,8 +3,9 @@
 # change this to no if you don't want compression or don't have the LZO lib
 USELZO = yes
 # change this if your LZO library is somewhere else
-LZOLIB = /usr/local/lib
-LZOINC = /usr/local/include
+LIB = lib
+LZOLIB = /usr/$(LIB)
+LZOINC = /usr/include/lzo
 
 # change this if you want sib to be installed somewhere else
 BINPREFIX = /usr/bin
@@ -21,7 +22,7 @@
 
 ifeq ("$(USELZO)", "yes")
 DEFINES += -DHAVE_LZO
-LIBLNK += -llzo 
+LIBLNK += -llzo2
 GPP_LI += -L$(LZOLIB) -I$(LZOINC)
 endif
 
--- sib-1.2/src/multiplex.cpp~	2006-12-12 01:54:21.406866821 +0200
+++ sib-1.2/src/multiplex.cpp	2006-12-12 01:54:24.996947928 +0200
@@ -29,7 +29,7 @@
 int enMultiplex( u_char *frame, u_int len)
 {
  static u_char buf[MAX_BUF_LEN];
- u_int newlen = len+1;
+ lzo_uint  newlen = len+1;
  bool override = false;
  
  // send a "standard" frame
@@ -87,7 +87,7 @@
  else
   memcpy( buf+1, frame, len);
  
- if( config.debug) printf( "ETH (%u) -> UDP (%u)\n", len, newlen);
+ if( config.debug) printf( "ETH (%u) -> UDP (%lu)\n", len, newlen);
  
  // to avoid negative compression stats newlen-1 is used (CONTROL byte)
  if( config.statsInterval > 0) newFrame( STAT_SENT, len, newlen-1);
@@ -96,7 +96,7 @@
 
 int deMultiplex( u_char *frame, u_int len)
 {
- u_int newlen = len-1;
+ lzo_uint  newlen = len-1;
  static u_char buf[MAX_BUF_LEN];
  if( len == 0) return 1;
  
@@ -121,7 +121,7 @@
   memcpy( buf, frame+1, newlen);
  }     
 
- if( config.debug) printf( "UDP (%u) -> ETH (%u)\n", len, newlen);
+ if( config.debug) printf( "UDP (%u) -> ETH (%lu)\n", len, newlen);
  // len-1 for control byte compensation
  if( config.statsInterval > 0) newFrame( STAT_RECV, newlen, len-1);
   
